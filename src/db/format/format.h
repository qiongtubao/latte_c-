
#ifndef __LATTE_C_PLUS_FORMAT_FORMAT_H
#define __LATTE_C_PLUS_FORMAT_FORMAT_H


#include <cstdint>
#include "./config.h"
#include <cassert>

namespace latte
{
    namespace rocksdb
    {
        
        // Checks whether a type is from user operation
        // kTypeRangeDeletion is in meta block so this API is separated from above
        // kTypeMaxValid can be from keys generated by
        // TruncatedRangeDelIterator::start_key()
        inline bool IsExtendedValueType(ValueType t) {
            return IsValueType(t) || t == kTypeRangeDeletion || t == kTypeMaxValid;
        }
        // Pack a sequence number and a ValueType into a uint64_t
        inline uint64_t PackSequenceAndType(uint64_t seq, ValueType t) {
            assert(seq <= kMaxSequenceNumber);
            // kTypeMaxValid is used in TruncatedRangeDelIterator, see its constructor.
            assert(IsExtendedValueType(t) || t == kTypeMaxValid);
            return (seq << 8) | t;
        }

    } // namespace rocksdb
    
} // namespace latte

#endif